let mapSourceRaw=[];AFRAME.registerComponent("room",{schema:{wallColor:{type:"string",default:"white"},floorColor:{type:"string",default:"white"},wallTexture:{type:"string",default:"none"},wallTexture2:{type:"string",default:"none"},wallTexture3:{type:"string",default:"none"},scale:{type:"string",default:"1 1 1"},wallSize:{type:"string",default:"1"},wallHeight:{type:"string",default:"3"},mapToLoad:{type:"string",default:"map"},mapSource:{type:"array",default:[]}},init:async function(){await this.loadData()},loadData:async function(){const t=this.data.mapToLoad;await this.loadMap(t),await this.createRooms()},loadMap:async function(t){this.data;let e=t+".json";const a=await fetch(e);mapSourceRaw=await a.json(),this.data.mapSource=mapSourceRaw},createRooms:function(){const t=this.data,e=this.data.mapSource,a=t.wallTexture,l=t.wallTexture2,i=t.wallTexture3,o=t.floorTexture;t.scale;t.scale;const r=t.wallColor,s=t.floorColor;const w=t.wallSize,u=t.wallHeight;console.log(e,w,u,e.height);for(let t=0;t<e.height;t++)for(let n=0;n<e.width;n++){console.log("room running");const h=n*e.width+t,d=`${(t-e.width/2)*w} 0 ${(n-e.height/2)*w}`,c=`${(t-e.width/2)*w} ${u/2} ${(n-e.height/2)*w}`,b=`${(t-e.width/2)*w} ${u/4} ${(n-e.height/2)*w}`,p=`${(t-e.width/2)*w} ${u/8} ${(n-e.height/2)*w}`;0!==e.data[h]&&1!==e.data[h]&&2!=e.data[h]&&3!==e.data[h]||(wall=document.createElement("a-box"),wall.setAttribute("width",w),wall.setAttribute("height",u),wall.setAttribute("depth",w),wall.setAttribute("position",c),wall.setAttribute("static-body",""),wall.setAttribute("material","src:#"+a),this.el.appendChild(wall),0===e.data[h]&&(wall.setAttribute("color",s),wall.setAttribute("height",u/20),wall.setAttribute("static-body",""),wall.setAttribute("position",d),wall.setAttribute("material","src:#"+o),wall.setAttribute("playermovement","")),1===e.data[h]&&(wall.setAttribute("color",r),wall.setAttribute("height",u),wall.setAttribute("static-body",""),wall.setAttribute("position",c),wall.setAttribute("material","src:#"+a)),2===e.data[h]&&(wall.setAttribute("color",r),wall.setAttribute("height",u/2),wall.setAttribute("static-body",""),wall.setAttribute("position",b),wall.setAttribute("material","src:#"+l)),3===e.data[h]&&(wall.setAttribute("color",r),wall.setAttribute("height",u/4),wall.setAttribute("static-body",""),wall.setAttribute("position",p),wall.setAttribute("material","src:#"+i)))}}});